{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":2510329,"sourceType":"datasetVersion","datasetId":1520310}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# <div style=\"color:#ffffff; border-radius:60px; border:#000000 solid; padding: 15px; background-color: #3c6478; font-size:100%; text-align:center; font-family:monospace;\">Loading the data set</div>","metadata":{}},{"cell_type":"code","source":"import pandas as pd","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:13.976422Z","iopub.execute_input":"2024-05-08T13:17:13.976762Z","iopub.status.idle":"2024-05-08T13:17:14.405048Z","shell.execute_reply.started":"2024-05-08T13:17:13.976735Z","shell.execute_reply":"2024-05-08T13:17:14.404104Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train = pd.read_csv(\"/kaggle/input/twitter-entity-sentiment-analysis/twitter_training.csv\")\nval = pd.read_csv(\"/kaggle/input/twitter-entity-sentiment-analysis/twitter_validation.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:14.406877Z","iopub.execute_input":"2024-05-08T13:17:14.407363Z","iopub.status.idle":"2024-05-08T13:17:14.801499Z","shell.execute_reply.started":"2024-05-08T13:17:14.40733Z","shell.execute_reply":"2024-05-08T13:17:14.800386Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train = train.iloc[:, 2:]\ntrain.columns = ['label', 'data']\nval = val.iloc[:, 2:]\nval.columns = ['label', 'data']","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:14.803693Z","iopub.execute_input":"2024-05-08T13:17:14.804065Z","iopub.status.idle":"2024-05-08T13:17:14.816902Z","shell.execute_reply.started":"2024-05-08T13:17:14.804035Z","shell.execute_reply":"2024-05-08T13:17:14.815831Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-08T16:25:39.827847Z","iopub.execute_input":"2024-05-08T16:25:39.828815Z","iopub.status.idle":"2024-05-08T16:25:39.838433Z","shell.execute_reply.started":"2024-05-08T16:25:39.828769Z","shell.execute_reply":"2024-05-08T16:25:39.837422Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train.label.unique()","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:14.818183Z","iopub.execute_input":"2024-05-08T13:17:14.818525Z","iopub.status.idle":"2024-05-08T13:17:14.840032Z","shell.execute_reply.started":"2024-05-08T13:17:14.818501Z","shell.execute_reply":"2024-05-08T13:17:14.83888Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train.isna().sum()","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:15.08427Z","iopub.execute_input":"2024-05-08T13:17:15.084592Z","iopub.status.idle":"2024-05-08T13:17:15.109231Z","shell.execute_reply.started":"2024-05-08T13:17:15.084566Z","shell.execute_reply":"2024-05-08T13:17:15.108163Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train = train.dropna()","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:15.476968Z","iopub.execute_input":"2024-05-08T13:17:15.477308Z","iopub.status.idle":"2024-05-08T13:17:15.50436Z","shell.execute_reply.started":"2024-05-08T13:17:15.477282Z","shell.execute_reply":"2024-05-08T13:17:15.50321Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train.label.unique()","metadata":{"execution":{"iopub.status.busy":"2024-05-08T15:30:41.064263Z","iopub.execute_input":"2024-05-08T15:30:41.065147Z","iopub.status.idle":"2024-05-08T15:30:41.077946Z","shell.execute_reply.started":"2024-05-08T15:30:41.065106Z","shell.execute_reply":"2024-05-08T15:30:41.076697Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train.label.value_counts().plot(kind = 'bar', grid = True)","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:15.913203Z","iopub.execute_input":"2024-05-08T13:17:15.913966Z","iopub.status.idle":"2024-05-08T13:17:16.198022Z","shell.execute_reply.started":"2024-05-08T13:17:15.913939Z","shell.execute_reply":"2024-05-08T13:17:16.197198Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"val.label.value_counts().plot(kind = 'bar', grid = True)","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:16.782752Z","iopub.execute_input":"2024-05-08T13:17:16.783471Z","iopub.status.idle":"2024-05-08T13:17:17.020641Z","shell.execute_reply.started":"2024-05-08T13:17:16.78344Z","shell.execute_reply":"2024-05-08T13:17:17.01971Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"y = train[\"label\"]\nX = train[\"data\"]\ny_val = val[\"label\"]\nX_val = val[\"data\"]","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:17.366363Z","iopub.execute_input":"2024-05-08T13:17:17.36751Z","iopub.status.idle":"2024-05-08T13:17:17.372591Z","shell.execute_reply.started":"2024-05-08T13:17:17.367468Z","shell.execute_reply":"2024-05-08T13:17:17.371609Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# <div style=\"color:#ffffff; border-radius:60px; border:#000000 solid; padding: 15px; background-color: #3c6478; font-size:100%; text-align:center; font-family:monospace;\">Data Pre processing</div>","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"code","source":"from tensorflow.keras.preprocessing.text import Tokenizer\nfrom tensorflow.keras.preprocessing.sequence import pad_sequences\nfrom keras.utils import to_categorical\nfrom sklearn.preprocessing import LabelEncoder\n\n# X = [str(x) for x in X]\n\n# Tokenization\ntokenizer = Tokenizer(num_words=10000)  \ntokenizer.fit_on_texts(X)\ntokenizer.fit_on_texts(X_val)\n\nX = tokenizer.texts_to_sequences(X)\nX_val = tokenizer.texts_to_sequences(X_val)\n\n\n# Padding\nmax_len = 100  # Define the maximum sequence length\nX = pad_sequences(X, maxlen=max_len,padding=\"post\")\nX_val = pad_sequences(X_val, maxlen=max_len,padding=\"post\")\n\n# Convert string labels to numerical labels\nlabel_encoder = LabelEncoder()\ny = label_encoder.fit_transform(y)\ny = to_categorical(y, num_classes=4)\ny_val = label_encoder.transform(y_val)\ny_val = to_categorical(y_val, num_classes=4)","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:21.879848Z","iopub.execute_input":"2024-05-08T13:17:21.880522Z","iopub.status.idle":"2024-05-08T13:17:38.267971Z","shell.execute_reply.started":"2024-05-08T13:17:21.880489Z","shell.execute_reply":"2024-05-08T13:17:38.26699Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X[1].shape","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:38.270297Z","iopub.execute_input":"2024-05-08T13:17:38.271307Z","iopub.status.idle":"2024-05-08T13:17:38.27756Z","shell.execute_reply.started":"2024-05-08T13:17:38.271269Z","shell.execute_reply":"2024-05-08T13:17:38.276645Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(X.shape)\nprint(y.shape)\nprint(X_val.shape)\nprint(y_val.shape)","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:17:38.278623Z","iopub.execute_input":"2024-05-08T13:17:38.278973Z","iopub.status.idle":"2024-05-08T13:17:38.29143Z","shell.execute_reply.started":"2024-05-08T13:17:38.278903Z","shell.execute_reply":"2024-05-08T13:17:38.290367Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# <div style=\"color:#ffffff; border-radius:60px; border:#000000 solid; padding: 15px; background-color: #3c6478; font-size:100%; text-align:center; font-family:monospace;\">Model Architecture</div>","metadata":{}},{"cell_type":"code","source":"from keras.models import Sequential\nfrom keras.layers import Embedding, LSTM, Dense, Bidirectional, Dropout, BatchNormalization\nfrom keras.optimizers import Adam\nfrom keras.callbacks import ReduceLROnPlateau\n\n# Define the model\nmodel = Sequential()\n\n# Embedding layer\nmodel.add(Embedding(input_dim=10000, output_dim=128, input_length=max_len))\n\n# Bidirectional LSTM layers\nmodel.add(Bidirectional(LSTM(64, dropout=0.2, recurrent_dropout=0.2, return_sequences=True)))\nmodel.add(Bidirectional(LSTM(64, dropout=0.2, recurrent_dropout=0.2)))\n\n# Dropout for regularization\nmodel.add(Dropout(0.5))\n\n# BatchNormalization for stabilizing training\nmodel.add(BatchNormalization())\n\n# Dense layer with softmax activation for classification\nmodel.add(Dense(4, activation='softmax'))\n\n# Compile the model\nmodel.compile(optimizer=\"adam\", loss='categorical_crossentropy', metrics=['accuracy'])\n\n# Learning rate scheduling\nreduce_lr = ReduceLROnPlateau(monitor='val_loss', factor=0.2, patience=2, min_lr=1e-6)\n\nmodel.summary()\n","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:29:30.688365Z","iopub.execute_input":"2024-05-08T13:29:30.690119Z","iopub.status.idle":"2024-05-08T13:29:30.784235Z","shell.execute_reply.started":"2024-05-08T13:29:30.690079Z","shell.execute_reply":"2024-05-08T13:29:30.783017Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"history = model.fit(X, y, epochs=20, batch_size=128, validation_data=(X_val, y_val), callbacks=[reduce_lr])","metadata":{"execution":{"iopub.status.busy":"2024-05-08T13:30:16.121385Z","iopub.execute_input":"2024-05-08T13:30:16.121752Z","iopub.status.idle":"2024-05-08T14:55:43.455708Z","shell.execute_reply.started":"2024-05-08T13:30:16.121722Z","shell.execute_reply":"2024-05-08T14:55:43.454679Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\n# Plot training & validation accuracy values\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model accuracy')\nplt.xlabel('Epoch')\nplt.ylabel('Accuracy')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()\n\n# Plot training & validation loss values\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model loss')\nplt.xlabel('Epoch')\nplt.ylabel('Loss')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-05-08T14:55:43.457724Z","iopub.execute_input":"2024-05-08T14:55:43.45801Z","iopub.status.idle":"2024-05-08T14:55:44.039963Z","shell.execute_reply.started":"2024-05-08T14:55:43.457986Z","shell.execute_reply":"2024-05-08T14:55:44.039072Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# model.save(\"sentiment_analysis_model.h5\")","metadata":{"execution":{"iopub.status.busy":"2024-05-08T15:03:36.448276Z","iopub.execute_input":"2024-05-08T15:03:36.448982Z","iopub.status.idle":"2024-05-08T15:03:36.452918Z","shell.execute_reply.started":"2024-05-08T15:03:36.448953Z","shell.execute_reply":"2024-05-08T15:03:36.45185Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import numpy as np\nfor i in range(12):\n    input_sequence = X[i].reshape(1, -1)\n    print(\"---------------------------------\")\n    print(np.argmax(y[i]))\n    print(np.argmax(model.predict(input_sequence, verbose=0)))","metadata":{"execution":{"iopub.status.busy":"2024-05-08T15:24:21.986196Z","iopub.execute_input":"2024-05-08T15:24:21.987046Z","iopub.status.idle":"2024-05-08T15:24:23.722389Z","shell.execute_reply.started":"2024-05-08T15:24:21.987018Z","shell.execute_reply":"2024-05-08T15:24:23.721395Z"},"trusted":true},"execution_count":null,"outputs":[]}]}